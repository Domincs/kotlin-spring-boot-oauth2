buildscript {
    ext {
        kotlinVersion = '1.2.21'
        springBootVersion = '1.4.7.RELEASE'

        sl4jVersion = '1.7.25'
        logbackVersion = '1.2.3'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")

        /** https://kotlinlang.org/docs/reference/compiler-plugins.html **/
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
//        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"

    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
//apply plugin: "kotlin-jpa"
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'me.w2x'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    //jpa
    compile('org.springframework.boot:spring-boot-starter-data-jpa')

    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.2")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    runtime('org.postgresql:postgresql')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')

    //Oauth2
    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.2.1.RELEASE'

    //datasouce pool
    compile 'com.alibaba:druid-spring-boot-starter:1.1.6'

    //hibernate
//    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.1.0.Final'
    compile group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.0.7.Final'
//    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'

    //database and data migration
    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.0.7'

    //logback
    compile group: 'ch.qos.logback', name: 'logback-core', version: logbackVersion
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion
    compile group: 'ch.qos.logback', name: 'logback-access', version: logbackVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: sl4jVersion
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: sl4jVersion
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: sl4jVersion

    //graphql
    compile 'com.graphql-java:graphql-spring-boot-starter:3.10.0'
    compile 'com.graphql-java:graphiql-spring-boot-starter:3.10.0'
    compile group: 'com.graphql-java', name: 'graphql-java-tools', version: '4.3.0'
}

sourceSets {
    main {
        kotlin {
            srcDir 'src/main/resources/migration'
        }
    }
}